name: CI

on:
  push:

jobs:
  test:
    strategy:
      matrix:
        luaVersion: 
          - "5.1"
          - "5.2"
          - "5.3"
          - "5.4"
          # - "luajit-2.0"
          # - "luajit-2.1"
        os:
          - ubuntu-latest
          - macos-latest
        
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
      - uses: xpol/setup-lua@v0.3
        with:
          lua-version: ${{ matrix.luaVersion }}
      - uses: leafo/gh-actions-luarocks@v4
      - name: Install openssl macos
        if: ${{ runner.os == 'macOS' }}
        run: brew install openssl
      - name: install luacheck
        run: luarocks install luacheck
      - name: install luasocket
        run: luarocks install luasocket
      - name: install luasec
        run: |
          find /usr -iname \*ssl\*.so
          export OPENSSL_DIR=/usr
          luarocks install luasec
      - name: generate self signed cert
        run: |
          openssl req \
            -newkey rsa:2048 \
            -x509 \
            -sha256 \
            -days 10000 \
            -nodes \
            -out cert.pem \
            -keyout key.pem \
            -subj "/C=US/ST=MN/L=Minneapolis/O=cosock/CN=cosock/"
      - name: download server for http tests
        run: |
          export COSOCK_TEST_SERVER_INSTALL_DIR="${GITHUB_WORKSPACE}"
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/cosock/test-http-server/releases/download/v0.1.7/cosock-test-server-installer.sh | sh
      - name: try-protect
        run: timeout 5 lua test/error-handling/try-protect.lua
      - name: spawn-child-and-die
        run: timeout 5 lua test/threads/spawn-child-and-die.lua
      - name: basic channel
        run: timeout 5 lua test/channel/basic.lua
      - name: select channel
        run: timeout 5 lua test/channel/via-select.lua
      - name: channel timeout
        run: timeout 5 lua test/channel/recv-timesout.lua
      - name: tcp client-multi
        run: timeout 5 lua test/tcp/client-multi.lua
      - name: tcp client-timeout
        run: timeout 5 lua test/tcp/client-timeout.lua
      - name: tcp client-server-large-payload
        run: timeout 5 lua test/tcp/client-server-large-payload.lua
      - name: udp client-timeout
        run: timeout 5 lua test/udp/client-timeout.lua
      - name: ssl client-multi
        run: timeout 5 lua test/ssl/client-multi.lua
      - name: ssl client-timeout
        run: timeout 5 lua test/ssl/client-timeout.lua
      - name: ssl client-server-large-payload
        run: timeout 5 lua test/ssl/client-server-large-payload.lua
      - name: http http
        run: |
          $GITHUB_WORKSPACE/bin/cosock-test-server 8080 &
          SERVER_PID=$!
          # ensure the port is bound before the test starts
          sleep 1
          timeout 5 lua test/http/http.lua 8080
      - name: http https via ssl
        run: |
          $GITHUB_WORKSPACE/bin/cosock-test-server 9443 . &
          SERVER_PID=$!
          # ensure the port is bound before the test starts
          sleep 1
          timeout 5 lua test/http/https-via-ssl.lua 9443
      - name: http https via http
        run: |
          $GITHUB_WORKSPACE/bin/cosock-test-server 8443 . &
          SERVER_PID=$!
          # ensure the port is bound before the test starts
          sleep 1
          timeout 5 lua test/http/https-via-http.lua 8443
      - name: asyncify-works
        run: timeout 5 lua test/asyncify/asyncify-works.lua
      - name: thread-metadata sleeping
        run: timeout 5 lua test/thread-metadata/sleeping.lua
      - name: thread-metadata sockets
        run: timeout 5 lua test/thread-metadata/sockets.lua
